body {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
}

header,
.container {
  display: none;
}

main {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  color: var(--foreground);
}

figure {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  padding-top: 1rem;
}

figure>img {
  display: inline;
  max-width: 100%;
  max-height: 80vh;
  -o-object-fit: contain;
  object-fit: contain;
  border-radius: 0.5rem;
  z-index: 100;
  transition: opacity 1000ms ease-out;
}

figcaption {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-end;
  color: #bcb4a6;
  width: 100%;
}


/* summary::before {
	content: '';
	position: absolute;
	width: 100%;
	height: 200%;
	transform: translate(0px, -4em);
} */

details#artwork-info {
  /* color: #bcb4a6; provided by default "--foreground"*/

  font-family:
    system-ui,
    -apple-system,
    BlinkMacSystemFont,
    'Segoe UI',
    Roboto,
    Oxygen,
    Ubuntu,
    Cantarell,
    'Open Sans',
    'Helvetica Neue',
    sans-serif;
  font-weight: 300;
  width: 100%;
}

/*TODO #############################################   */

main:has(details[open]) {
  #svg {
    display: none;
  }

  &>figure>img {
    position: absolute;
    top: 0.5rem;
    right: 1rem;
    width: 25%;
    height: auto;
    max-height: 8em;
    -o-object-fit: contain;
    object-fit: contain;
    border-radius: 0.5em;
  }
}

button {
  font-size: 1.5rem;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,
    Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  background-color: transparent;
  color: #bcb4a6;
  align-self: flex-start;
  /* Enable panning and pinch zoom gestures, but disable additional non-standard gestures such as double-tap to zoom. Disabling double-tap to zoom removes the need for browsers to delay the generation of click events when the user taps the screen.  */
  touch-action: manipulation;
  line-height: 1;
  opacity: 0.9;
}

button.favorite {
  color: #cdca85;
}

button.favorite:hover {
  color: #dcd858;
  border-radius: 50%;
  box-shadow: 0 0 0.2rem #eae9c2aa, 0 0 0.8rem #eae9c2aa, inset 0 0 0.2rem #eae9c2aa, inset 0 0 0.8rem #eae9c2aa;
  outline: 0;
  padding: 0;
  aspect-ratio: 1;
}

button.not-favorite {
  padding: 0;
  opacity: 0.6;
}

body:has(details[open]) {
  justify-content: flex-start;

  main>button {
    display: block;
  }
}

ul {
  display: flex;
  flex-direction: column;
  gap: 0.5em;
  padding-block: 2rem;
}

li:first-child {
  max-width: 70%;
}

li {
  list-style: none;
  font-weight: 200;
  color: #cec5b6;
  white-space: break-spaces;
  text-wrap: pretty;
  line-height: 1.5em;
  max-width: 60ch;

  p {
    color: #cec5b6;
    hyphens: auto;
    white-space: normal;
  }

  a {
    color: #c5d8ff;
  }
}

span {
  color: #cec5b6;
  white-space: normal;
}

/* li:nth-child(2) {
	order: 5;
} */

/*
li:nth-child(1) { order: 2; }
li:nth-child(3) { order: 1; }
li:nth-child(4) { order: 3; }
li:nth-child(5) { order: 1; }
*/

summary::-webkit-details-marker {
  /* display: none; */
}


/* __________________________  */

.styled summary::-webkit-details-marker {
  display: none;
}

.styled summary {
  list-style: none;
}

.styled summary::after {
  content: url(../../../icons/info.svg);
  position: absolute;
  right: 0.5rem;
  top: 0;
  padding-top: 1.05em;
  width: 1.3em;
}


details[open].styled>summary {
  width: 70%;

  span {
    display: none;
  }

  &::after {
    display: none;
  }
}

.styled summary::after #svg-group,
.styled summary::after #dot {
  transform: scale(2)
}

/*___ toggle details with animation 2 */

details[open] summary>div::before {
  content: '';
  position: absolute;
  width: 100%;
  height: 8rem;
  transform: translate(0px, -4rem)
}

.expander {
  display: grid;
  grid-template-rows: 0fr;
  overflow: hidden;
  animation: ease-out expand none 1.5s;
  /* transition: grid-template-rows 1s; */
}

.expander-content {
  transition: visibility 1s;
  /* visibility: hidden; */
}

details[open]:has(.expander.expanded) {
  .expander.expanded {
    grid-template-rows: 1fr;
  }

  .expander.expanded .expander-content {
    visibility: visible;
  }
}



details:has(summary>div.open) {
  .expander {
    grid-template-columns: 100%;
    grid-template-rows: 1fr;
  }
}

@keyframes expand {
  0% {
    grid-template-rows: 0fr;
    opacity: 0;
  }

  10% {

    opacity: .5;
  }

  100% {
    grid-template-rows: 1fr;
  }
}